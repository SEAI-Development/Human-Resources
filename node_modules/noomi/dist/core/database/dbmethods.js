"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.txRollback = exports.txCommit = exports.txBegin = exports.getTransaction = exports.closeConnection = exports.getConnection = void 0;
const dbmanager_1 = require("./dbmanager");
/**
 * 数据库暴露方法集
 */
/**
 * 获取数据库或数据源连接
 * @returns    数据库connection，针对不同的product返回不同:
 *              mysql:      返回connection对象
 *              oracle:     返回connection对象
 *              mssql:      返回request对象
 *              relaen:     返回connection对象
 *              typeorm:    返回connection（已连接）
 */
async function getConnection() {
    return await dbmanager_1.DBManager.getConnection();
}
exports.getConnection = getConnection;
/**
 * 关闭数据库连接
 */
async function closeConnection() {
    await dbmanager_1.DBManager.closeConnection();
}
exports.closeConnection = closeConnection;
/**
 * 获取事务对象
 * @returns     事务对象
 */
async function getTransaction() {
    return await dbmanager_1.DBManager.getTransaction();
}
exports.getTransaction = getTransaction;
/**
 * 开始事务
 */
async function txBegin() {
    const tx = await getTransaction();
    //首次begin，进行实际begin，否则只做计数器+1
    if (tx.beginTimes++ === 0) {
        await tx.begin();
    }
}
exports.txBegin = txBegin;
/**
 * 提交事务
 * @param close -   关闭连接
 * @returns         提交成功返回true，否则返回false
 */
async function txCommit(close) {
    const tx = await getTransaction();
    if (--tx.beginTimes === 0) {
        await tx.commit();
        dbmanager_1.DBManager.removeTransaction();
        if (close) {
            await closeConnection();
        }
        return true;
    }
    return false;
}
exports.txCommit = txCommit;
/**
 * 回滚事务
 * @param close -   是否关闭connection
 * @returns         回滚成功返回true，否则返回false
 */
async function txRollback(close) {
    const tx = await getTransaction();
    if (--tx.beginTimes === 0) {
        await tx.rollback();
        dbmanager_1.DBManager.removeTransaction();
        if (close) {
            await closeConnection();
        }
        return true;
    }
    return false;
}
exports.txRollback = txRollback;
//# sourceMappingURL=dbmethods.js.map