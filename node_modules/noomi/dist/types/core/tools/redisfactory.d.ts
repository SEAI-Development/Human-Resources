import { RedisCfg, RedisInst, RedisItem } from "../types/redistypes";
/**
 * redis 工厂
 */
export declare class RedisFactory {
    /**
     * 存储所有的redis对象
     */
    private static clientMap;
    /**
     * 添加redis client到clientMap
     * @param cfg -   redis配置项
     */
    static addClient(cfg: RedisCfg): void;
    /**
     * 获得redis client
     * @param name -      client name，默认default
     * @returns          redis client
     */
    static getClient(name: string): RedisInst;
    /**
     * 把值存入redis中
     * @param clientName -    client name
     * @param item -          redis item
     */
    static set(clientName: string, item: RedisItem): Promise<void>;
    /**
     * 从redis 中取值
     * @param clientName -  client name
     * @param item -        redis item
     * @returns             item value
     */
    static get(clientName: string, item: RedisItem): Promise<string>;
    /**
     * 获取map数据
     * @param clientName -  client name
     * @param item -        RedisItem
     * @returns             object或null
     */
    static getMap(clientName: string, item: RedisItem): Promise<unknown>;
    /**
     * 是否存在某个key
     * @param clientName -    redis name
     * @param key -           key
     * @returns              存在则返回true，否则返回false
     */
    static has(clientName: string, key: string): Promise<boolean>;
    /**
     * 设置超时时间
     * @param client -    client name
     * @param key -       键
     * @param timeout -   超时时间
     */
    static setTimeout(client: RedisInst | string, key: string, timeout: number): Promise<void>;
    /**
     * 删除项
     * @param clientName -    client name
     * @param key -           键
     * @param subKey -        子键
     */
    static del(clientName: string, key: string, subKey?: string): Promise<void>;
    /**
     * 清空
     * @param clientName -    client name
     */
    static clear(clientName: string): Promise<void>;
    /**
     * 解析配置文件
     * @param path -  redis配置文件路径
     */
    static parseFile(path: string): void;
    /**
     * 初始化
     * @param config -    redis配置
     */
    static init(config: any): void;
}
