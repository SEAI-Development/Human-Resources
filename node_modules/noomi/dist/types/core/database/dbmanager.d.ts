import { ConnectionConfig } from "../types/dbtypes";
import { NoomiTransaction } from "./noomitransaction";
/**
 * 数据库管理器
 * @remarks
 * 用于管理数据库配置、连接对象、事务对象等
 */
export declare class DBManager {
    /**
     * 连接管理器类
     */
    private static connectionManager;
    /**
     * 事务类
     */
    private static transactionClazz;
    /**
     * 连接和事物map
     * @remarks
     * 存放connection和transaction实例，键为thread id，值为object，格式为
     * ```json
     * {
     *      conn:连接对象
     *      tx:事务对象
     * }
     * ```
     */
    private static map;
    /**
     * 初始化
     * @param cfg -   配置项,参考数据库配置
     */
    static init(cfg: ConnectionConfig): void;
    /**
     * 解析文件
     * @param path -  文件路径
     */
    static parseFile(path: string): void;
    /**
     * 获取连接
     * @returns     connection对象(具体connection对象由package确定)
     */
    static getConnection(): Promise<any>;
    /**
     * 释放连接
     */
    static closeConnection(): Promise<void>;
    /**
     * 获取事务，类型由具体package确定
     * @returns     事务对象
     */
    static getTransaction(): Promise<NoomiTransaction>;
    /**
     * 移除事务
     */
    static removeTransaction(): Promise<void>;
    /**
     * 获取异步id
     * @returns     异步id
     */
    private static getAsyncId;
}
